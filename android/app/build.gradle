plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services' // Firebase services
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin" // Flutter plugin
}

android {
    namespace "com.example.ammarapp3" // Change to your app's namespace
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    defaultConfig {
        applicationId "com.example.ammarapp3" // Your app's package name
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Use release keys here for production
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.3.0') // Firebase BoM
    implementation 'com.google.firebase:firebase-analytics' // Add Firebase Analytics
    // Add other Firebase services as needed
}

// This ensures the local.properties file is handled
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'
